@{
    ViewBag.Title = "Sales Quotation";
}
@*<script src="~/assets/js/jspdf.min.js"></script>*@
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0/jquery.min.js"></script>*@
<script src="~/assets/js/jsPDF/jspdf.min.js"></script>
<script src="~/assets/js/jsPDF/jspdf.plugin.autotable.min.js"></script>

<div class="page-title">
    <div class="row">
        <div class="col-12 col-md-6 order-md-1 order-last">
            <h3>@ViewBag.Title</h3>
            @*<p class="text-subtitle text-muted"><a href="index.html">Create New</a></p>*@
            <button class="btn btn-primary me-1 mb-1" type="button" id="btnList" onclick="onLoad()">List</button>
            <button class="btn btn-light-secondary me-1 mb-1" type="button" id="Create" onclick="onCreate()">New</button>
            <button class="btn btn-light-secondary me-1 mb-1" type="button" id="btnPreview" onclick="previewReport()">Preview</button>
        </div>
        <div class="col-12 col-md-6 order-md-2 order-first">
            <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.SubTitle</li>
                </ol>
            </nav>
        </div>
    </div>
</div>

<section id="multiple-column-form">
    <div class="row match-height">
        <div class="col-12">
            <div class="card">

                <div Id="FormProcess">

                </div>
                <div Id="EntityReportPreview">
                    
                </div>
            </div>
        </div>
    </div>
</section>

<script>

    $(document).ready(function () {
        onLoad();

        var specialElementHandlers = {
            "#editor": function (element, renderer) {
                return true;
            }
        };

        $("#btnPreview").click(function () {
            previewReport();
        });
    });

    function onLoad() {
        $.ajax({
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
        })
            .done(function (response) {
                $("#FormProcess").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("List Load Fail");
        });
    }

    function onCreate() {
        $.ajax({
            url: '@Url.Action("SaleQuotationCreate", "Salequotation")'
        })
                .done(function (response) {
                    //debugger;
                    $("#FormProcess").html(response);
                    //var search = $("#searchInput");
                    //search.focus();
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    //alert("FAIL");
                });
    };

    function pagingwork(data) {
        var pageno = data;
        var pageSize = document.getElementById("ddlTotalPageNo").value;
        var dtSearch = document.getElementById("dtSearch").value;

        //alert(RecordMode);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
            data: {
                pageno: pageno,
                pageSize: pageSize,
                dtSearch: dtSearch
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })

    };

    $(".editButton").click(function () {
        var EditId = $(this).attr("data-id");
        debugger;
        //alert(EditId);

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaleQuotationCreate", "Salequotation")',
            data: {
                Id: EditId
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })

    });

    function onEdit(data) {
        var EditId = data;
        //alert(EditId);

        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationEdit", "Salequotation")',
            data: {
                Id: EditId
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })
    };

    function onEditSave() {
        var Status = $("#Status").val();
        var BranchName = $("#BranchName").val();
        var Dscr = $("#Dscr").val();
        var BranchAddress = $("#BranchAddress").val();
        var CompNo = $("#CompanyId").val();
        var AcntId = $("#AcntId").val();        //alert(EditId);
        console.log(CompNo);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaleQuotationEdit", "Salequotation")',
            data: {
                BranchName: BranchName,
                Dscr: Dscr,
                BranchAddress: BranchAddress,
                CompNo: CompNo,
                AcntId: AcntId,
                Status: Status
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })
    };

    function onSave() {
        if (validateForm) {
            console.log(validateForm);
            var BranchName = $("#BranchName").val();
            var Dscr = $("#Dscr").val();
            var BranchAddress = $("#BranchAddress").val();
            //var CompNo = $("#CompNo").val();
            var AcntId = $("#AcntId").val();
            var CompNo = $("#CompanyId").val();
            var AcntId = $("#AcntCode").val();        //alert(EditId);
            console.log(CompNo);

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaleQuotationCreate", "Salequotation")',
                data: {
                    BranchName: BranchName,
                    Dscr: Dscr,
                    BranchAddress: BranchAddress,
                    CompNo: CompNo,
                    AcntId: AcntId
                },
                beforeSend: function () {
                    $("#CustomSearchLoader").show();
                },
                complete: function () {
                    $("#CustomSearchLoader").hide();
                },
                success: function (result) {
                    //alert("result received");
                    $("#FormProcess").html(result);
                }
            })
        }
    };

    function onDelete(data) {
        //var confirmDelete = confirm("Are you sure you want to delete this record?");

        //swal('Added','Your data added', 'success')
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        })
            .then((result) => {
                if (result.isConfirmed) {
                    var DeleteId = data;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaleQuotationDelete", "Salequotation")',
                        data: {
                            Id: DeleteId
                        },
                        beforeSend: function () {
                            $("#CustomSearchLoader").show();
                        },
                        complete: function () {
                            $("#CustomSearchLoader").hide();
                        },
                        success: function (result) {
                            //alert("result received");
                            $("#FormProcess").html(result);
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Your work has been saved',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    })
                }
            })
    };

    function getSearchRecords(e) {

        if (e.keyCode === 13) {
            e.preventDefault(); // Ensure it is only this code that runs
            var pageSize = document.getElementById("ddlTotalPageNo").value;
            var dtSearch = document.getElementById("dtSearch").value;
            $.ajax({
                type: "Get",
                url: '@Url.Action("SaleQuotationList", "Salequotation")',
                data: {
                    pageSize: pageSize,
                    dtSearch: dtSearch
                },
                beforeSend: function () {
                    $("#CustomSearchLoader").show();
                },
                complete: function () {
                    $("#CustomSearchLoader").hide();
                },
                success: function (result) {
                    //alert("result received");
                    $("#FormProcess").html(result);
                }
            })
            //alert("Enter was pressed was presses");
        }

    };

    function getPageValue() {
        var pageSize = document.getElementById("ddlTotalPageNo").value;
        var dtSearch = document.getElementById("dtSearch").value;

        console.log(pageSize);
        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
            data: {
                pageSize: pageSize,
                dtSearch: dtSearch
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })
    };

    function DataTableOrder(clmNameOrder) {
        //clmNameOrder.preventDefault();
        console.log(clmNameOrder);
        //debugger;
        var pageSize = document.getElementById("ddlTotalPageNo").value;
        var dtSearch = document.getElementById("dtSearch").value;

        console.log(pageSize);
        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
            data: {
                pageSize: pageSize,
                dtSearch: dtSearch,
                clmNameOrder: clmNameOrder
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })

    };

    function previewReport() {
        var dtSearch = document.getElementById("dtSearch").value;
        var clmNameOrder = 1;
        var reportpreviewcount = 0;
        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationReportView", "Salequotation")',
            data: {
                dtSearch: dtSearch,
                clmNameOrder: clmNameOrder
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#EntityReportPreview").html(result);
                if (reportpreviewcount == 0) {
                var doc = new jsPDF('p');
                    doc.text('Branch Report ', 20, 10)
                //doc.autoTable({ html: '#tblCompanyReport' },
                //    {(20, 20)});

                    doc.autoTable({ html: '#tblBranchReport' });

                //doc.text("This is the default font.", 20, 20);

                doc.autoPrint();
                addFooters(doc);
                const hiddFrame = document.createElement('iframe');
                hiddFrame.style.position = 'fixed';
                // "visibility: hidden" would trigger safety rules in some browsers like safari，
                // in which the iframe display in a pretty small size instead of hidden.
                // here is some little hack ~
                hiddFrame.style.width = '1px';
                hiddFrame.style.height = '1px';
                hiddFrame.style.opacity = '0.01';
                const isSafari = /^((?!chrome|android).)*safari/i.test(window.navigator.userAgent);
                if (isSafari) {
                    // fallback in safari
                    hiddFrame.onload = () => {
                        try {
                            hiddFrame.contentWindow.document.execCommand('print', false, null);
                        } catch (e) {
                            hiddFrame.contentWindow.print();
                        }
                    };
                }
                hiddFrame.src = doc.output('bloburl');
                document.body.appendChild(hiddFrame);
                reportpreviewcount = 1;
            }
            }
        })
    };

    const addFooters = doc => {
        const pageCount = doc.internal.getNumberOfPages()
        doc.setFont('helvetica', 'italic')
        doc.setFontSize(8)
        for (var i = 1; i <= pageCount; i++) {
            doc.setPage(i)
            //doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 2, 287, {
            //    align: 'center'
            //})
            doc.text(150, 285, 'page ' + pageCount); //print number bottom right
            console.log("Total pages: " + pageCount);
        }
    };


    function validateForm() {
        let x = document.forms["branchForm"]["BranchName"].value;
        if (x == "") {
            alert("Name must be filled out");
            return false;
        }
    }

</script>