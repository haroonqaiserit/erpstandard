@{
    ViewBag.Title = "Sales Quotation";
}
@*<script src="~/assets/js/jspdf.min.js"></script>*@
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0/jquery.min.js"></script>*@
<script src="~/assets/js/jsPDF/jspdf.min.js"></script>
<script src="~/assets/js/jsPDF/jspdf.plugin.autotable.min.js"></script>
<script src="https://unpkg.com/jspdf-invoice-template@1.4.0/dist/index.js"></script>
<div class="page-title">
    <div class="row">
        <div class="col-12 col-md-6 order-md-1 order-last">
            <h3>@ViewBag.Title</h3>
            @*<p class="text-subtitle text-muted"><a href="index.html">Create New</a></p>*@
            <button class="btn btn-primary me-1 mb-1" type="button" id="btnList" onclick="onLoad()">List</button>
            <button class="btn btn-light-secondary me-1 mb-1" type="button" id="Create" onclick="onCreate()">New</button>
            <button class="btn btn-light-secondary me-1 mb-1" type="button" id="btnPreview" onclick="generatePDF()">Preview</button>
        </div>
        <div class="col-12 col-md-6 order-md-2 order-first">
            <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.SubTitle</li>
                </ol>
            </nav>
        </div>
    </div>
</div>

<section id="multiple-column-form">
    <div class="row match-height">
        <div class="col-12">
            <div class="card">

                <div Id="FormProcess">

                </div>
                <div Id="EntityReportPreview">
                    
                </div>
            </div>
        </div>
    </div>
</section>

<script>

    $(document).ready(function () {
        onLoad();

        var specialElementHandlers = {
            "#editor": function (element, renderer) {
                return true;
            }
        };
    });

    function onLoad() {
        $.ajax({
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
        })
            .done(function (response) {
                $("#FormProcess").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("List Load Fail");
        });
    }

    function onCreate() {
        $.ajax({
            url: '@Url.Action("SaleQuotationCreate", "Salequotation")'
        })
                .done(function (response) {
                    //debugger;
                    $("#FormProcess").html(response);
                    //var search = $("#searchInput");
                    //search.focus();
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    //alert("FAIL");
                });
    };

    function pagingwork(data) {
        var pageno = data;
        var pageSize = document.getElementById("ddlTotalPageNo").value;
        var dtSearch = document.getElementById("dtSearch").value;

        //alert(RecordMode);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
            data: {
                pageno: pageno,
                pageSize: pageSize,
                dtSearch: dtSearch
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })

    };

    $(".editButton").click(function () {
        var EditId = $(this).attr("data-id");
        debugger;
        //alert(EditId);

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaleQuotationCreate", "Salequotation")',
            data: {
                Id: EditId
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })

    });

    function onEdit(data) {
        var EditId = data;
        //alert(EditId);

        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationEdit", "Salequotation")',
            data: {
                Id: EditId
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })
    };

    function onEditSave() {
        var Status = $("#Status").val();
        var BranchName = $("#BranchName").val();
        var Dscr = $("#Dscr").val();
        var BranchAddress = $("#BranchAddress").val();
        var CompNo = $("#CompanyId").val();
        var AcntId = $("#AcntId").val();        //alert(EditId);
        console.log(CompNo);
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaleQuotationEdit", "Salequotation")',
            data: {
                BranchName: BranchName,
                Dscr: Dscr,
                BranchAddress: BranchAddress,
                CompNo: CompNo,
                AcntId: AcntId,
                Status: Status
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })
    };

    function onSave() {
        if (validateForm) {
            console.log(validateForm);
            var SaleQuotations = [];
            var SaleQuotation = {};
            var SaleQuotationDetails = [];
            SaleQuotation.CustomerNo = $("#CustomerId").val();

            if (SaleQuotation.SalesManId == "" || SaleQuotation.CustomerNo == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please select the required dropdowns!',
                })
                return;
            }
            SaleQuotation.QuoteDate = $("#QuoteDate").val();
            SaleQuotation.QuoteValidDate = $("#QuoteValidDate").val();
            SaleQuotation.Remarks = $("#Remarks").val();
            SaleQuotation.SalesManId = $("#SalesManId").val();
            SaleQuotation.CustomerNo = $("#CustomerId").val();

// Master Detail Record Save
            SaleQuotations.push(SaleQuotation);
            //console.log("SaleQuotation before loop preview");
            //console.log(SaleQuotation);
            var flgerr = false;
            $('#tblQuotationDetail > tbody  > tr').each(function () {
                var SaleQuotationDetail = {};
                //console.log("enter to read table combobox value");
                //console.log($('option:selected', $(this).find('td:eq(0) select')).val());

                SaleQuotationDetail.ItemID = $(this).find("td:eq(0) input[type='text']").val();
                if (SaleQuotationDetail.ItemID == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: "Item selection is mandatory",
                    })
                    flgerr = true;
                    return;
                }
                console.log($(this).find("td:eq(3) input[type='number']").val());
                SaleQuotationDetail.Qty = $(this).find("td:eq(7) input[type='number']").val();
                SaleQuotationDetail.Rate = $(this).find("td:eq(8) input[type='number']").val();
                if (SaleQuotationDetail.Qty == "" || SaleQuotationDetail.Rate == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: "Qty/Rate must required",
                    })
                    flgerr = true;
                    return;
                }
                SaleQuotationDetail.SaleTaxRate = $(this).find("td:eq(9) input[type='number']").val();
                SaleQuotationDetail.ASaleTaxRate = $(this).find("td:eq(10) input[type='number']").val();
                SaleQuotationDetail.SExDutyRate = $(this).find("td:eq(11) input[type='number']").val();

                SaleQuotationDetails.push(SaleQuotationDetail);

                //console.log("SaleQuotation preview");
                //console.log(SaleQuotation);
                //console.log("SaleQuotation Detail");
                console.log(JSON.stringify(SaleQuotationDetail));
                console.log(JSON.stringify(SaleQuotationDetails));
            });
            if (flgerr == false) {
                $.ajax({
                    url: '@Url.Action("SaleQuotationCreate", "Salequotation")',
                    type: "POST",
                    data: JSON.stringify(
                         {
                            SaleQuotation: SaleQuotation,
                            SaleQuotationDetail: SaleQuotationDetails
                        }
                    ),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.result == false) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: '' + response.text + '',
                            })
                        } else {
                            $("#FormProcess").html(response);
                        }
                    }
                });
            }



// Master Detail Record Save


        }
    };

    function onDelete(data) {
        //var confirmDelete = confirm("Are you sure you want to delete this record?");

        //swal('Added','Your data added', 'success')
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        })
            .then((result) => {
                if (result.isConfirmed) {
                    var DeleteId = data;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaleQuotationDelete", "Salequotation")',
                        data: {
                            Id: DeleteId
                        },
                        beforeSend: function () {
                            $("#CustomSearchLoader").show();
                        },
                        complete: function () {
                            $("#CustomSearchLoader").hide();
                        },
                        success: function (result) {
                            //alert("result received");
                            $("#FormProcess").html(result);
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Your work has been saved',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    })
                }
            })
    };

    function getSearchRecords(e) {

        if (e.keyCode === 13) {
            e.preventDefault(); // Ensure it is only this code that runs
            var pageSize = document.getElementById("ddlTotalPageNo").value;
            var dtSearch = document.getElementById("dtSearch").value;
            $.ajax({
                type: "Get",
                url: '@Url.Action("SaleQuotationList", "Salequotation")',
                data: {
                    pageSize: pageSize,
                    dtSearch: dtSearch
                },
                beforeSend: function () {
                    $("#CustomSearchLoader").show();
                },
                complete: function () {
                    $("#CustomSearchLoader").hide();
                },
                success: function (result) {
                    //alert("result received");
                    $("#FormProcess").html(result);
                }
            })
            //alert("Enter was pressed was presses");
        }

    };

    function getPageValue() {
        var pageSize = document.getElementById("ddlTotalPageNo").value;
        var dtSearch = document.getElementById("dtSearch").value;

        console.log(pageSize);
        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
            data: {
                pageSize: pageSize,
                dtSearch: dtSearch
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })
    };

    function DataTableOrder(clmNameOrder) {
        //clmNameOrder.preventDefault();
        console.log(clmNameOrder);
        //debugger;
        var pageSize = document.getElementById("ddlTotalPageNo").value;
        var dtSearch = document.getElementById("dtSearch").value;

        console.log(pageSize);
        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationList", "Salequotation")',
            data: {
                pageSize: pageSize,
                dtSearch: dtSearch,
                clmNameOrder: clmNameOrder
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#FormProcess").html(result);
            }
        })

    };

    function previewReport() {
        var dtSearch = document.getElementById("dtSearch").value;
        var clmNameOrder = 1;
        var reportpreviewcount = 0;
        $.ajax({
            type: "Get",
            url: '@Url.Action("SaleQuotationReportView", "Salequotation")',
            data: {
                dtSearch: dtSearch,
                clmNameOrder: clmNameOrder
            },
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //alert("result received");
                $("#EntityReportPreview").html(result);
                if (reportpreviewcount == 0) {
                var doc = new jsPDF('p');
                    doc.text('Branch Report ', 20, 10)
                //doc.autoTable({ html: '#tblCompanyReport' },
                //    {(20, 20)});

                    doc.autoTable({ html: '#tblBranchReport' });

                //doc.text("This is the default font.", 20, 20);

                doc.autoPrint();
                addFooters(doc);
                const hiddFrame = document.createElement('iframe');
                hiddFrame.style.position = 'fixed';
                // "visibility: hidden" would trigger safety rules in some browsers like safari，
                // in which the iframe display in a pretty small size instead of hidden.
                // here is some little hack ~
                hiddFrame.style.width = '1px';
                hiddFrame.style.height = '1px';
                hiddFrame.style.opacity = '0.01';
                const isSafari = /^((?!chrome|android).)*safari/i.test(window.navigator.userAgent);
                if (isSafari) {
                    // fallback in safari
                    hiddFrame.onload = () => {
                        try {
                            hiddFrame.contentWindow.document.execCommand('print', false, null);
                        } catch (e) {
                            hiddFrame.contentWindow.print();
                        }
                    };
                }
                hiddFrame.src = doc.output('bloburl');
                document.body.appendChild(hiddFrame);
                reportpreviewcount = 1;
            }
            }
        })
    };

    const addFooters = doc => {
        const pageCount = doc.internal.getNumberOfPages()
        doc.setFont('helvetica', 'italic')
        doc.setFontSize(8)
        for (var i = 1; i <= pageCount; i++) {
            doc.setPage(i)
            //doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 2, 287, {
            //    align: 'center'
            //})
            doc.text(150, 285, 'page ' + pageCount); //print number bottom right
            console.log("Total pages: " + pageCount);
        }
    };


    function validateForm() {
        let x = document.forms["branchForm"]["BranchName"].value;
        if (x == "") {
            alert("Name must be filled out");
            return false;
        }
    }

    function generatePDF() {

        var Id = "1 -L";

        $.ajax({
            type: "GET",
            url: '@Url.Action("SaleQuotationPreview", "Salequotation")',
            data: {
                Id: Id
            },
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //console.log(JSON.stringify(result));
                var pdfObject = jsPDFInvoiceTemplate.default(result);
                console.log(pdfObject);
                //var res = JSON.stringify(result);
                //console.log(res);
                //console.log(res.replace(/["jsPDFInvoiceTemplate.OutputType.Save"]+/g, 'jsPDFInvoiceTemplate.OutputType.Save'));


            //    $.each(result, function (i, item) {
            //        var rows;
            //        //console.log(i);
            //        if (i == 0) {
            //            rows = "<option selected value='" + item.ItemID + "'>" + item.Dscr + "</option>";
            //        }
            //        else {
            //            rows = "<option value='" + item.ItemID + "'>" + item.Dscr + "</option>";
            //        }
            //        $('#ItemID').append(rows);
            //        $('#ItemIDD').append(rows);
            //    });
            }
        });



    }
        var props = {
            outputType: jsPDFInvoiceTemplate.OutputType.Save,
                returnJsPDFDocObject: true,
                    fileName: "Invoice 2024",
                        orientationLandscape: false,
                            compress: true,
                                logo: {
                src: "https://raw.githubusercontent.com/edisonneza/jspdf-invoice-template/demo/images/logo.png",
                    width: 53.33, //aspect ratio = width/height
                        height: 26.66,
                            margin: {
                    top: 0, //negative or positive num, from the current position
                        left: 0 //negative or positive num, from the current position
                }
            },
            stamp: {
                inAllPages: true,
                    src: "https://raw.githubusercontent.com/edisonneza/jspdf-invoice-template/demo/images/qr_code.jpg",
                        width: 20, //aspect ratio = width/height
                            height: 20,
                                margin: {
                    top: 0, //negative or positive num, from the current position
                        left: 0 //negative or positive num, from the current position
                }
            },
            business: {
                name: "Business Name",
                    address: "Albania, Tirane ish-Dogana, Durres 2001",
                        phone: "(+355) 069 11 11 111",
                            email: "email@example.com",
                                email_1: "info@example.al",
                                    website: "www.example.al",
                            },
            contact: {
                label: "Invoice issued for:",
                    name: "Client Name",
                        address: "Albania, Tirane, Astir",
                            phone: "(+355) 069 22 22 222",
                                email: "client@website.al",
                                    otherInfo: "www.website.al",
                            },
            invoice: {
                label: "Invoice #: ",
                    num: 19,
                        invDate: "Payment Date: 01/01/2021 18:12",
                            invGenDate: "Invoice Date: 02/02/2021 10:17",
                                headerBorder: true,
                                    tableBodyBorder: true,
                                        header: [
                                            {
                                                title: "#",
                                                style: {
                                                    width: 10
                                                }
                                            },
                                            {
                                                title: "Title",
                                                style: {
                                                    width: 30
                                                }
                                            },
                                            {
                                                title: "Description",
                                                style: {
                                                    width: 80
                                                }
                                            },
                                            { title: "Price" },
                                            { title: "Quantity" },
                                            { title: "Unit" },
                                            { title: "Total" }
                                        ],
                                            table: Array.from(Array(15), (item, index) => ([
                                                index + 1,
                                                "There are many variations ",
                                                "Lorem Ipsum is simply dummy text dummy text ",
                                                200.5,
                                                4.5,
                                                "m2",
                                                400.5
                                            ])),
                                                additionalRows: [{
                                                    col1: 'Total:',
                                                    col2: '145,250.50',
                                                    col3: 'ALL',
                                                    style: {
                                                        fontSize: 14 //optional, default 12
                                                    }
                                                },
                                                {
                                                    col1: 'VAT:',
                                                    col2: '20',
                                                    col3: '%',
                                                    style: {
                                                        fontSize: 10 //optional, default 12
                                                    }
                                                },
                                                {
                                                    col1: 'SubTotal:',
                                                    col2: '116,199.90',
                                                    col3: 'ALL',
                                                    style: {
                                                        fontSize: 10 //optional, default 12
                                                    }
                                                }],

                                                    invDescLabel: "Invoice Note",
                                                        invDesc: "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary.",
                            },
            footer: {
                text: "The invoice is created on a computer and is valid without the signature and stamp.",
                            },
            pageEnable: true,
                pageLabel: "Page ",
                        }



</script>