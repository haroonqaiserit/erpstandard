@model ERPStandard.ViewModels.QuotationCreateNewViewModel
@{
    ViewBag.Title = "Sales Transaction";
    ViewBag.SubTitle = "Quotation";
}
<style>
    .select2-container .select2-selection--single {
        height: 34px !important;
    }

    .select2-container--default .select2-selection--single {
        border: 1px solid #ccc !important;
        border-radius: 0px !important;
    }

    
</style>


@*<style>
    .search-table {
        padding: 1%;
    }

    .search-box {
        background: #c1c1c1;
        border: 1px solid #ababab;
    }

        .search-box input:focus {
            box-shadow: none;
            border: 2px solid #eeeeee;
        }

    #searchpartial {
        position: absolute;
        z-index: 10;
    }

    #CustomSearchLoader {
        position: fixed;
        left: 50%;
        top: 50%;
        z-index: 9999;
    }
</style>*@



<div class="card-header">
    <h4 class="card-title">@ViewBag.SubTitle New</h4>
</div>
<div class="card-content">
    <div class="card-body">
        <form name="QuotationForm" class="form">
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        <label for="QuoteDate">Quote Date</label>
                        <input type="date" id="QuoteDate" required class="form-control" name="QuoteDate">
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label for="QuoteValidDate">Valid Date</label>
                        <input type="date" id="QuoteValidDate" required class="form-control" name="QuoteValidDate">
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="form-group">
                        <label for="Remarks">Remarks</label>
                        <input type="text" id="Remarks"  required minlength="3" maxlength="150" class="form-control" placeholder="Remarks" name="Remarks">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="SalesManId">Sales Man</label>
                        <select class="choices form-select  select2" required id="SalesManId" name="SalesManId" >
                            <option value='' selected disabled> --Select SalesMan--</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="CustomerNo">Customer</label>
                        <select class="form-select  select2" required id="CustomerId" name="CustomerNo" >
                            <option value='' selected disabled> --Select Customer--</option>
                        </select>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <h6 danger>Quotation Details</h6>
                    </div>
                </div>
            </div>

            <!-- Table for Quotation Details -->
            <div class="row">
                <div class="col-md-offset-12">
                    <table id="tblQuotationDetail" class="table dataTable-table form-control">
                        <thead>
                            <tr class="btn-success">
                                <th style="display:none">Item Id</th>
                                <th>Item Name</th>
                                <th>Qty</th>
                                <th>Rate</th>
                                <th style="display:none">Amt</th>
                                <th style=@(Model.invoiceType == 0 ? "display:none" : "")>VAT</th>
                                <th style="display:none">VAT Amt</th>
                                @if (Model.invoiceType == 2 || Model.invoiceType == 4)
                                {
                                    <th>ASTax</th>
                                    <th style="display:none" :">ASTax Amt</th>
                                }
                                else
                                {
                                    <th style="display:none" :">ASTax</th>
                                    <th style="display:none" :">ASTax Amt</th>
                                }
                                @if (Model.invoiceType == 3 || Model.invoiceType == 4)
                                {
                                    <th>ExDuty</th>
                                    <th style="display:none" :">ExDuty Amt</th>
                                }
                                else
                                {
                                    <th style="display:none" :">ExDuty</th>
                                    <th style="display:none" :">ExDuty Amt</th>
                                }
                                <th>Net Amt</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="tblRowBody">
                            <tr id="tblRow">
                                <td class="col-md-1" style="display:none">
                                    <div class="md">
                                        <div class="search-box-Id">
                                            <input type="text" id="CustomSearchID" readonly class="form-control" placeholder="Id" name="ItemID">
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <input type="text" autocomplete="off" id="searchTextbox" onkeydown="handleKeyDown(event)" style="width: 100%" class="form-control" placeholder="Search Item">
                                    <ul id="searchResults" name="searchResults" style="display: none; position: absolute; list-style: none; margin: 0; padding: 0;" ></ul>

                                </td>
                                <td class="col-md-1">
                                    <input type="number" required id="Qty" min="1" max="999999999"  class="form-control" placeholder="Qty" name="Qty" onkeyup="handleKeyDownQty(this, event)" onclick="handleClicknumeric(event)">
                                </td>
                                <td class="col-md-1">
                                    <input type="number"  required  id="Rate" min="1" max="999999999"  class="form-control" placeholder="Rate" name="Rate" onkeyup="handleKeyDownRate(this, event)" onclick="handleClicknumeric(event)">
                                </td>
                                <td class="col-md-1" style="display:none">
                                    <input type="number"  required readonly id="Amt" class="form-control" placeholder="Amt" name="Amt">
                                </td>
                                @if (Model.invoiceType == 0)
                                {
                                    <td class="col-md-1" style="display:none">
                                        <input type="number" id="SaleTaxRate" min="1" max="99" class="form-control" placeholder="Tax" name="SaleTaxRate" onclick="handleClicknumeric(event)">
                                    </td>
                                }
                                else
                                {
                                    <td class="col-md-1">
                                        <input type="number"  required id="SaleTaxRate" min="1" max="99"  class="form-control focus" placeholder="Tax" name="SaleTaxRate" onkeyup="handleKeyDownTax(this, event)" onclick="handleClicknumeric(event)">
                                    </td>
                                }
                                <td class="col-md-1" style="display:none">
                                    <input type="number" readonly id="SaleTaxAmt" class="form-control" placeholder="SaleTaxAmt" name="SaleTaxAmt">
                                </td>
                                @if (Model.invoiceType == 2 || Model.invoiceType == 4)
                                {
                                    <td class="col-md-1">
                                        <input type="number" required id="ASaleTaxRate" class="form-control  focus" placeholder="AddTax" name="ASaleTaxRate" onkeyup="handleKeyDownAddTax(this, event)" onclick="handleClicknumeric(event)">
                                    </td>
                                }
                                else
                                {
                                    <td class="col-md-1" style="display:none">
                                        <input type="number" id="ASaleTaxRate" class="form-control" placeholder="AddTax" name="ASaleTaxRate" onclick="handleClicknumeric(event)">
                                    </td>
                                }
                                <td class="col-md-1" style="display:none">
                                    <input type="number"  required readonly id="ASaleTaxAmt" class="form-control" placeholder="ASaleTaxAmt" name="ASaleTaxAmt">
                                </td>
                                @if (Model.invoiceType == 3 || Model.invoiceType == 4)
                                {
                                    <td class="col-md-1">
                                        <input type="number"  required  id="SExDutyRate" class="form-control  focus" placeholder="DutyRate" name="SExDutyRate" onkeyup="handleKeyDownAddSEd(this, event)" onclick="handleClicknumeric(event)">
                                    </td>
                                }
                                else
                                {
                                    <td class="col-md-1" style="display:none">
                                        <input type="number" id="SExDutyRate" class="form-control" placeholder="DutyRate" name="SExDutyRate">
                                    </td>
                                }
                                <td class="col-md-1" style="display:none">
                                    <input type="number" readonly id="SExDutyAmt" class="form-control" placeholder="SExDutyAmt" name="SExDutyAmt">
                                </td>
                                <td class="col-md-1">
                                    <input type="number" readonly id="NetTotalAmt" class="form-control" placeholder="Net Amt" name="NetTotalAmt">
                                </td>
                                <td class="col-md-1">
                                    <button type="button" class="btn-success" id="btnrowadd" onclick="onAddRow()">Add</button>
                                    <button type="button" class="btn-danger" onclick="onDeleteRow(this)">Delete</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="col-sm-12 d-flex justify-content-end">
                        <button type="button" id="btnSave" class="btn btn-primary me-1 mb-1" onclick="onSave(this.form, '0')">Save</button>
                        <button type="button" id="btnSaveAdd" class="btn btn-primary me-1 mb-1" onclick="onSave(this.form, '2')">Save (+)</button>
                        <button type="button" class="btn btn-light-secondary me-1 mb-1" onclick="onLoad()">Cancel</button>
                    </div>
                </div>
            </div>
            <!-- This table used to add new row Template -->
            <table hidden style="display: none">
                <tr style="display: none" id="tblRowforCopy">

                    <td class="col-md-1" style="display:none">
                        <div class="md">
                            <div class="search-box-Id">
                                <input type="text" id="CustomSearchID" readonly class="form-control" placeholder="Id" name="ItemID">
                            </div>
                        </div>
                    </td>


                    <td>
                        <input type="text" autocomplete="off" id="searchTextbox" onkeydown="handleKeyDown(event)" style="width: 100%" class="form-control" placeholder="Search Item">
                        <ul id="searchResults" name="searchResults" style="display: none; position: absolute; list-style: none; margin: 0; padding: 0;"></ul>
                    </td>

                    <td class="col-md-1">
                        <input type="number" id="Qty" min="1" max="999999999" class="form-control" placeholder="Qty" name="Qty" onkeyup="handleKeyDownQty(this, event)" onclick="handleClicknumeric(event)">
                    </td>
                    <td class="col-md-1">
                        <input type="number"  id="Rate" min="1" max="999999999" class="form-control" placeholder="Rate" name="Rate" onkeyup="handleKeyDownRate(this, event)" onclick="handleClicknumeric(event)">
                    </td>
                    <td class="col-md-1" style="display:none">
                        <input type="number" readonly id="Amt" minlength="1" maxlength="9" class="form-control" placeholder="Amt" name="Amt">
                    </td>
                    @if (Model.invoiceType == 0)
                    {
                        <td class="col-md-1" style="display:none">
                            <input type="number" id="SaleTaxRate" min="1" max="99"  class="form-control" placeholder="Tax" name="SaleTaxRate">
                        </td>
                    }
                    else
                    {
                        <td class="col-md-1">
                            <input type="number" id="SaleTaxRate" min="1" max="99"  class="form-control  focus" placeholder="Tax" name="SaleTaxRate" onkeyup="handleKeyDownTax(this, event)" onclick="handleClicknumeric(event)">
                        </td>
                    }
                    <td class="col-md-1" style="display:none">
                        <input type="number" readonly id="SaleTaxAmt" class="form-control" placeholder="SaleTaxAmt" name="SaleTaxAmt">
                    </td>
                    @if (Model.invoiceType == 2 || Model.invoiceType == 4)
                    {
                        <td class="col-md-1">
                            <input type="number" id="ASaleTaxRate" min="1" max="99"  class="form-control focus" placeholder="AddTax" name="ASaleTaxRate" onkeyup="handleKeyDownAddTax(this, event)" onclick="handleClicknumeric(event)">
                        </td>
                    }
                    else
                    {
                        <td class="col-md-1" style="display:none">
                            <input type="number" id="ASaleTaxRate" class="form-control" placeholder="AddTax" name="ASaleTaxRate">
                        </td>
                    }
                    <td class="col-md-1" style="display:none">
                        <input type="number" readonly id="ASaleTaxAmt" class="form-control" placeholder="ASaleTaxAmt" name="ASaleTaxAmt">
                    </td>
                    @if (Model.invoiceType == 3 || Model.invoiceType == 4)
                    {
                        <td class="col-md-1">
                            <input type="number" id="SExDutyRate" class="form-control focus" placeholder="DutyRate" name="SExDutyRate" onkeyup="handleKeyDownAddSEd(this, event)" onclick="handleClicknumeric(event)">
                        </td>
                    }
                    else
                    {
                        <td class="col-md-1" style="display:none">
                            <input type="number" id="SExDutyRate" class="form-control" placeholder="DutyRate" name="SExDutyRate">
                        </td>
                    }
                    <td class="col-md-1" style="display:none">
                        <input type="number" readonly id="SExDutyAmt" class="form-control" placeholder="SExDutyAmt" name="SExDutyAmt">
                    </td>
                    <td class="col-md-1">
                        <input type="number" readonly id="NetTotalAmt" class="form-control" placeholder="Net Amt" name="NetTotalAmt">
                    </td>

                    <td>
                        <button type="button" id="btnrowadd" class="badge bg-success" onclick="onAddRow()">Add</button>
                        <button type="button" class="badge bg-danger" onclick="onDeleteRow(this)">Delete</button>
                    </td>
                </tr>

            </table>
            <!-- Table for Quotation Detail -->
        </form>
    </div>
</div>

<script>
    function handleKeyDown(event) {
        var key = event.key;
        var textbox = event.target;
        console.log(key);
        calculateAmt(event);

        var TableRow = event.target.closest('tr');
        var results = TableRow.querySelector('[name=searchResults]')
        var ItemID = TableRow.querySelector('[name=ItemID]')

        //var results = document.getElementById("searchResults");

        if (key === "ArrowDown") {
            event.preventDefault();
            if (results.childNodes.length > 0) {
                results.childNodes[0].focus();
            } 
        } else {
            if (event.keyCode === 8) {
                console.log("backspace");
                ItemID.value = "";
                cleartextboxes();
            }
            results.style.display = "block";
            var itemclass = 1;
            fetch("/Salequotation/search?query=" + textbox.value + "&itemclass=" + itemclass)

                .then(function (response) {
                    return response.json();
                })
                .then(function (data) {
                    results.innerHTML = "";
                    for (var i = 0; i < data.length && i < 5; i++) {
                        var item = data[i].Dscr;
                        var li = document.createElement("li");
                        li.setAttribute("data-id", data[i].ItemID);
                        li.innerHTML = item;
                        li.tabIndex = 0;
                        li.style.backgroundColor = "white";
                        li.style.padding = "5px";
                        li.style.whiteSpace = "wrap"
                        li.onmouseover = function () {
                            this.style.backgroundColor = "lightgray";
                        };
                        li.onmouseout = function () {
                            this.style.backgroundColor = "white";
                        };
                        li.onclick = function () {
                            textbox.value = this.innerHTML;
                            ItemID.value = this.getAttribute("data-id");
                            selectitemval(ItemID.value, textbox.value);
                            results.style.display = "none";
                        };
                        li.onkeydown = function (event) {
                            if (event.key === "ArrowDown") {
                                event.preventDefault();
                                var next = this.nextSibling;
                                if (next) {
                                    next.focus();
                                }
                            } else if (event.key === "ArrowUp") {
                                event.preventDefault();
                                var previous = this.previousSibling;
                                if (previous) {
                                    previous.focus();
                                }
                            } else if (event.key === "Enter") {
                                textbox.value = this.innerHTML;
                                ItemID.value = this.getAttribute("data-id");
                                selectitemval(ItemID.value, textbox.value);
                                results.style.display = "none";
                            } 
                        };
                        results.appendChild(li);
                    }
                });
        }
    }

    function cleartextboxes(){
        RateGet.val = "";
        Qtysearchtxtboxget.val = "";
        SaleTaxRateGet.val = "";
        ASaleTaxRateGet.val = "";
        SExDutyRateGet.val = "";
    }

    $(document).on('keydown', function (event) {
        if (event.which === 40) {
            event.preventDefault();
            $('.list-group-item.active').removeClass('active').next().addClass('active').focus();
        }
        if (event.which === 38) {
            event.preventDefault();
            $('.list-group-item.active').removeClass('active').prev().addClass('active').focus();
        }
        //if (event.which === 9) {
        //    event.preventDefault();
        //    if (chnodeflg == true) {
        //        $(chnode).focus();
        //    }
        //}
        if (event.which === 27) {
            event.preventDefault();
            $(chnode).hide();
        }

    });

    //$(document).on('keydown', function (e) {
    //    if (e.keyCode === 9) { // Tab key
    //        e.preventDefault();
    //        console.log("tab2");
    //        var currentFocus = $(':focus');
    //        var nextFocus = currentFocus.next();
    //        if (nextFocus.length) {
    //            nextFocus.focus();
    //        } else {
    //            currentFocus.parent().children().first().focus();
    //        }
    //    }
    //});

</script>


<script>
    var invoicetype;
    $(document).ready(function () {
        invoicetype = @Model.invoiceType;
        console.log(invoicetype);
        SalesmanComboFill();
        CustomerComboFill();
        var now = new Date();
        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);
        var today = now.getFullYear() + "-" + (month) + "-" + (day);
        var dayValid = ("0" + (now.getDate() + 3)).slice(-2);
        var validdaate = now.getFullYear() + "-" + (month) + "-" + (dayValid);
        $('#QuoteDate').val(today);
        $('#QuoteValidDate').val(today);
        $("#Remarks").focus();
    });
    //var nudMax = document.getElementById("max").value;

    function handleKeyDownQty(eval, e) {
        //console.log($(eval).val());
        calculateAmt(e);

        if (e.keyCode === 13) {
            /*var currentTabIndex = e.target.tabIndex;
            console.log("currentTabIndex is: "+currentTabIndex);
            var nextTabIndex = currentTabIndex + 1;
            var nextInput = document.querySelector("[tabIndex='" + nextTabIndex + "']");
            if (nextInput) {
                nextInput.focus();
            }*/
            e.preventDefault();

            var val = $(eval).val();
            if (val === "") return;

            var currentRow = e.target.closest("td");
            var nextRow = currentRow.nextElementSibling;
            var nextInput = nextRow.querySelector("#Rate");
            //console.log("current row " + currentRow);
            //console.log("reached " + nextInput);

            if (nextInput) {
                nextInput.focus();
            }
        }
    }
    function handleKeyDownRate(eval, e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            var val = $(eval).val();
            if (val === "") return;
            // qty =1, Rate = 2, Amt =3, tax=4, taxamt = 5, AStax = 6, AStaxAmt = 7
            //SEduty =8, SEdutyAmt =9, NetVal=10, BtnAdd = 11
            //console.log($(eval).val());
            var currentCell = e.target.closest("td");
            var nextCell = currentCell.nextElementSibling.nextElementSibling;
            var nextInput = nextCell.querySelector("#SaleTaxRate");

            if (!nextInput.className.includes("focus")) {
                nextCell = currentCell.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling
                nextInput = nextCell.querySelector("#btnrowadd");
                //console.log("next input td " + nextInput);
            }
            if (nextInput) {
                nextInput.focus();
            }
        }

    }
    function handleKeyDownTax(eval, e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            var val = $(eval).val();
            if (val === "") return;
            // qty =1, Rate = 2, Amt =3, tax=4, taxamt = 5, AStax = 6, AStaxAmt = 7
            //SEduty =8, SEdutyAmt =9, NetVal=10, BtnAdd = 11
            var currentCell = e.target.closest("td");
            var nextCell = currentCell.nextElementSibling.nextElementSibling;
            var nextInput = nextCell.querySelector("#ASaleTaxRate");
            //console.log("next input td " + nextInput);
            //console.log("display style " + nextInput.style.display);

            if (!nextInput.className.includes("focus")) {
                //console.log("next input td with none style " + nextInput);

                nextCell = currentCell.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling
                nextInput = nextCell.querySelector("#SExDutyRate");
                if (!nextInput.className.includes("focus")) {
                    nextCell = currentCell.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling
                    nextInput = nextCell.querySelector("#btnrowadd");
                    //console.log("next input td " + nextInput);
                }
            }
            if (nextInput) {
                nextInput.focus();
            }
        }
    }
    function handleKeyDownAddTax(eval, e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            var val = $(eval).val();
            if (val === "") return;
            // qty =1, Rate = 2, Amt =3, tax=4, taxamt = 5, AStax = 6, AStaxAmt = 7
            //SEduty =8, SEdutyAmt =9, NetVal=10, BtnAdd = 11
            var currentCell = e.target.closest("td");
            var nextCell = currentCell.nextElementSibling.nextElementSibling;
            var nextInput = nextCell.querySelector("#SExDutyRate");
            if (nextInput.style.display === "none" || nextInput.style.display === "") {
                nextCell = currentCell.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling
                nextInput = nextCell.querySelector("#btnrowadd");
                console.log("next input td " + nextInput);
            }
            if (nextInput) {
                nextInput.focus();
            }
        }
    }
    function handleKeyDownAddSEd(eval,e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            var val = $(eval).val();
            if (val === "") return;
            // qty =1, Rate = 2, Amt =3, tax=4, taxamt = 5, AStax = 6, AStaxAmt = 7
            //SEduty =8, SEdutyAmt =9, NetVal=10, BtnAdd = 11
            var currentCell = e.target.closest("td");
            var nextCell = currentCell.nextElementSibling.nextElementSibling.nextElementSibling;
            var nextInput = nextCell.querySelector("#btnrowadd");
            if (nextInput) {
                nextInput.focus();
            }
        }
    }
    function onAddRow() {
        //var table = document.getElementById('tblQuotationDetail');
        //var row = document.getElementById('tblRow')
        //console.log(row[row.length - 1]);
        ////var row = table.getElementById('tblRow')
        //var rowOuterHtml = row[row.length - 1].rowOuterHtml;
        //var newRow = table.insertRow();
        //newRow.innerHTML = rowOuterHtml;

        var table = document.getElementById('tblQuotationDetail');
        var row = document.getElementById('tblRowforCopy');
        var tbody = document.getElementById('tblRowBody');
        var clone = row.cloneNode(true); // copy children too
        clone.id = "newID"; // change id or other attributes/contents
        clone.style.display = 'table-row'
        tbody.appendChild(clone); // add new row to end of table
        //clone.focus();
        var newRow = $("table#tblQuotationDetail tr:last");
        var firstInput = newRow.find('input[name="searchResults"]');

        //var results = newRow.querySelector('[name=searchResults]')
        var qty_input = newRow.find('[name=Qty]')
        var rate_input = newRow.find('[name=Rate]')
        var SaleTaxRate = newRow.find('[name=SaleTaxRate]')

        qty_input.attr("required", "");
        rate_input.attr("required", "");

        if (invoicetype == 2 || invoicetype == 4)
        {
            var SaleTaxRate = newRow.find('[name=SaleTaxRate]')
            var ASaleTaxRate = newRow.find('[name=ASaleTaxRate]')
            SaleTaxRate.attr("required", "");
            ASaleTaxRate.attr("required", "");
        }

        firstInput.focus();
    };
    function onDeleteRow(ev) {
        var p = ev.parentNode.parentNode;
        if (p.id != "tblRow") {
            p.parentNode.removeChild(p);
        }
    }
    function SalesmanComboFill() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("SalesmanDropdown", "Combofill")',
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //$('#AcntCode').html('');
                //var rows1 = "<option value='' selected disabled > --Select Account--</option >";
                //$('#AcntCode').append(rows1);

                $.each(result, function (i, item) {
                    var rows;
                    if (i == 0) {
                        rows = "<option selected value='" + item.SalesManId + "'>" + item.Name + "</option>";
                    }
                    else {
                        rows = "<option value='" + item.SalesManId + "'>" + item.Name + "</option>";
                    }
                    $('#SalesManId').append(rows);
                });
            }
        });
    };
    function CustomerComboFill() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("CustomerDropdown", "Combofill")',
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //$('#AcntCode').html('');
                //var rows1 = "<option value='' selected disabled > --Select Account--</option >";
                //$('#AcntCode').append(rows1);
                console.log("results received");
                //console.log(result);

                $.each(result, function (i, item) {
                    var rows;
                    //console.log(item);
                    if (i == 0) {
                        rows = "<option selected value='" + item.CustomerNo + "'>" + item.Name + "</option>";
                    }
                    else {
                        rows = "<option value='" + item.CustomerNo + "'>" + item.Name + "</option>";
                    }
                    $('#CustomerId').append(rows);
                });
            }
        });
    };
    var searchflg = false;
    var chnode;
    var chnodeflg=false;
    var searchtextboxget;
    var idsearchtxtboxget;
    var Qtysearchtxtboxget;


    var RateGet;
    var SaleTaxRateGet;
    var ASaleTaxRateGet;
    var SExDutyRateGet;



    function getItemSearchRecords(e, evt) {

        calculateAmt(evt);
        //$(chnode).hide();
        if (chnodeflg == false) {
            $(chnode).show();
            chnodeflg = true;
        }
        //$(chnode).html('');
        var val = $(e).val();

        //if (evt.keyCode === 8) {
        //    evt.preventDefault();
        //    $(idsearchtxtboxget).val('');
        //    $(chnode).focus();
        //    //console.log("Focus not set");
        //}
        //if (evt.keyCode === 9) {
        //    evt.preventDefault();
        //    $(chnode).focus();
        //    //console.log("Focus not set");
        //}
        if (evt.keyCode === 27) {
            evt.preventDefault();
            $(chnode).hide();
            chnodeflg = false;

            //console.log("Focus not set");
        }
        if (evt.keyCode === 13) {
            evt.preventDefault();
            if (val === "") return;
            $(chnode).html('');
            $(chnode).hide();
            var QuoteDate = $("#QuoteDate").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("SingleFirstRec", "Combofill")',
                data: {
                    Search: val,
                    docdate: QuoteDate
                },
                beforeSend: function () {
                    // $("#CustomSearchLoader").show();
                },
                complete: function () {
                    //$("#CustomSearchLoader").show();
                },
                success: function (data) {
                    if (!data["STaxRate"]) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Tax Error!',
                            text: 'Please define Tax for the current period!',
                        })
                        return;
                    }

                    $(idsearchtxtboxget).val(data["ItemID"]);
                    $(searchtextboxget).val(data["Dscr"]);
                    if (data["Rate"] > 0) {
                        $(RateGet).val(data["Rate"]);
                    }
                    $(SaleTaxRateGet).val(data["STaxRate"]);
                    $(ASaleTaxRateGet).val(data["ASTaxRate"]);
                    $(SExDutyRateGet).val(data["ExcDuty"]);
                    console.log($(SaleTaxRateGet).val());
                    console.log(data["STaxRate"]);
                    $(Qtysearchtxtboxget).focus();
                }
            });

        } else {
            var ItemClass = 1;//Finished Goods
            $.ajax({
                type: "GET",
                url: '@Url.Action("ItemDropdown", "Combofill")',
                data: {
                    Search: val,
                    ItemClass: ItemClass
                },
                beforeSend: function () {
                    // $("#CustomSearchLoader").show();
                },
                complete: function () {
                    //$("#CustomSearchLoader").show();
                },
                success: function (data) {
                    //console.log(data);
                    $(chnode).html(data);
                }
            });
        }
        //if (evt.keyCode === 40) {
        //    console.log("down arrokey pressed");
        //    //evt.preventDefault();
        //    //return;
        //    $(chnode).focus();
        //}

        //if (evt.keyCode === 40) {
        //    evt.preventDefault();
        //    console.log(evt.keyCode);
        //    $(chnode).focus();
        //    console.log("Focus not set");
        //}

    };
    function SearchingLikeSendle(val) {
        console.log("reached in Searching");
        //var val = $("#CustomSearch").val();

        //console.log(searchflg);
        //console.log(val);

        //$("#searchpartial").show();

        if (chnode != null & chnodeflg == false) {
            chnode.show();
        }

        if (val == "" || searchflg==false) {
            $(chnode).html("");
            return false;
        }
        $.ajax({
            type: "GET",
            url: '@Url.Action("ItemDropdown", "Combofill")',
            data: {
                Search: val
            },
            beforeSend: function () {
               // $("#CustomSearchLoader").show();
            },
            complete: function () {
                //$("#CustomSearchLoader").show();
            },
            success: function (data) {
                console.log(data);
                $("#searchpartial").html(data);
            }
        })
    }
    function selectitemval(itemval, name) {
        searchflg = false;
        //$("#CustomSearch").val(itemval);
        //console.log(v);
        console.log(itemval + ' ' + name);
        var val = name;
        var QuoteDate = $("#QuoteDate").val();

            $.ajax({
                type: "GET",
                url: '@Url.Action("SingleFirstRec", "Combofill")',
                data: {
                    Search: val,
                    docdate: QuoteDate
                },
                beforeSend: function () {
                    // $("#CustomSearchLoader").show();
                },
                complete: function () {
                    //$("#CustomSearchLoader").show();
                },
                success: function (data) {
                    if (!data["STaxRate"]) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Tax Error!',
                            text: 'Please define Tax for the current period!',
                        })
                        return;
                    }

                    $(idsearchtxtboxget).val(data["ItemID"]);
                    $(searchtextboxget).val(data["Dscr"]);
                    if (data["Rate"] > 0) {
                        $(RateGet).val(data["Rate"]);
                    }
                    $(SaleTaxRateGet).val(data["STaxRate"]);
                    $(ASaleTaxRateGet).val(data["ASTaxRate"]);
                    $(SExDutyRateGet).val(data["ExcDuty"]);
                    console.log($(SaleTaxRateGet).val());
                    console.log(data["STaxRate"]);
                    $(Qtysearchtxtboxget).focus();
                    $(chnode).hide();
                }
            });
    }
    function ItemFill(search) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("ItemDropdown", "Combofill")',
            data: {
                dtSearch: search
            },
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //$('#AcntCode').html('');
                //var rows1 = "<option value='' selected disabled > --Select Account--</option >";
                //$('#AcntCode').append(rows1);
                console.log(result);
                $.each(result, function (i, item) {
                    var rows;
                    //console.log(i);
                    if (i == 0) {
                        rows = "<option selected value='" + item.ItemID + "'>" + item.Dscr + "</option>";
                    }
                    else {
                        rows = "<option value='" + item.ItemID + "'>" + item.Dscr + "</option>";
                    }
                    $('#ItemID').append(rows);
                    $('#ItemIDD').append(rows);
                });
            }
        });
    };
    function getval(sel) {
        var ReceiverId = $(sel).val();

           console.log(ReceiverId);
        @*$.ajax({
            type: "POST",
            url: "/DeviceManagement/DeviceIsExist?ReceiverId=" + ReceiverId,
            success: function (res) {
                if (res.result == true) {
                    window.location.href ="@Url.Action("EditDeviceM", "DeviceManagement")";
                }
            },
            error: function (exception) {
                alert('Exeption:');
            }
        });*@
    };
    $(document).mouseup(function (e) {
        var container = $(chnode);

        // if the target of the click isn't the container nor a descendant of the container
        if (!container.is(e.target) && container.has(e.target).length === 0) {
            container.hide();
        }
    });
</script>

<script>
    $('.select2').select2();
</script>