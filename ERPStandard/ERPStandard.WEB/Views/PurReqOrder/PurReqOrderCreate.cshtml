@model ERPStandard.ViewModels.QuotationCreateNewViewModel
@{
    ViewBag.Title = "Purchase Transaction";
    ViewBag.SubTitle = "Requisition";
}
<style>
    .right-aligned-table {
        float: right;
        margin-left: 20px;
    }

    .custom-input {
        text-align: right !important;
    }

        .custom-input:disabled {
            outline-color: blue;
        }

    .select2 {
        width: 100% !important;
    }

    .select2-container .select2-selection--single {
        height: 34px !important;
    }

    .select2-container--default .select2-selection--single {
        border: 1px solid #ccc !important;
        border-radius: 0px !important;
    }
</style>

<div class="card-header">
    <h4 class="card-title">@ViewBag.SubTitle New</h4>
</div>
<div class="card-content">
    <div class="card-body">
        <form name="RequisitionForm" class="form">
            <div class="Master">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="RefDocName">Document Name</label>
                            <input type="text" id="RefDocName" class="form-control" name="RefDocName">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="RefDocId">Reference Number</label>
                            <input type="text" id="RefDocId" class="form-control" name="RefDocId">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="RefDocName">Document Date</label>
                            <input type="date" id="RefDocDate" class="form-control" name="RefDocDate">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label for="RequisitionDate">Date</label>
                            <input type="date" id="RequisitionDate" required class="form-control" name="RequisitionDate">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="StoreUnitId">Store Unit</label>
                            <select class="choices form-select  select2" id="StoreUnitId" name="StoreUnitId" required>
                                <option value='' selected disabled> --Select Store Unit--</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="Remarks">Remarks</label>
                            <input type="text" id="Remarks" required minlength="3" maxlength="150" class="form-control" placeholder="Remarks" name="Remarks" onkeyup="handleKeyDownRemarks(event)">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <h6 danger>@ViewBag.SubTitle Details</h6>
                        </div>
                    </div>
                </div>
                <!-- Table for Quotation Details -->
            </div>
            <div class="Detail">
                <!-- Table for Detail -->
                <div class="row">
                    <div class="col-md-offset-12 table-responsive">
                        <table id="tblDocumentDetail" class="table dataTable-table table-bordered  form-control">
                            <thead>
                                <tr>
                                    <th colspan="9" class="bg-success text-white" style="text-align:center">R E Q U I S I T I O N &nbsp;&nbsp; D E T A I L</th>
                                    <th colspan="3" class="bg-success text-white" style="text-align:center">L A S T &nbsp;&nbsp; G R N</th>
                                    <th class="bg-success text-white text-center align-middle " rowspan="2">Action</th>
                                </tr>

                                <tr>
                                    <th class="col-md-2 bg-success text-white">Cost-Centre</th>
                                    <th style="display:none">ItemID</th>
                                    <th class="col-md-2 bg-success text-white">Item</th>
                                    <th class="bg-success text-white">Stock</th>
                                    <th class="bg-success text-white">Specs</th>
                                    <th class="bg-success text-white">Quantity</th>
                                    <th class="bg-success text-white">UOM</th>
                                    <th class="bg-success text-white">Required Date</th>
                                    <th class="bg-success text-white">Est.Rate</th>
                                    <th class="bg-success text-white">Request by</th>
                                    <th style="display:none">GRNID</th>
                                    <th class="bg-primary text-white text-center align-middle ">Qty</th>
                                    <th class="bg-primary text-white text-center align-middle ">Rate</th>
                                    <th class="bg-primary text-white text-center align-middle ">&nbsp;Last.Date&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody id="tblRowBody">
                                <tr id="tblRow">
                                    <td class="col-md-1">
                                        <div class="form-group">
                                            <select class="form-control form-select  select2" id="CostCenterId" name="CostCenterId" required>
                                                <option value='' selected disabled> --Select CostCenter--</option>
                                            </select>
                                        </div>
                                    </td>
                                    <td style="display:none">
                                        <div class="form-group">
                                            <input type="text" id="CustomSearchID" readonly class="form-control" placeholder="Id" name="ItemID">
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <div class="form-group">
                                            <input type="text" autocomplete="off" id="searchTextbox" name="searchTextbox" onkeyup="handleKeyDown(event)" style="width: 100%" class="form-control" placeholder="Search Item">
                                            <ul id="searchResults" name="searchResults" style="display: none; position: absolute; list-style: none; margin: 0; padding: 0;"></ul>
                                        </div>
                                    </td>
                                    <td id="stockqty">
                                        <div class="form-group">
                                            <input type="text" id="StockQty" disabled minlength="3" maxlength="150" class="form-control  custom-input" placeholder="SQty" name="StockQty">
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <div class="form-group">
                                            <input type="text" id="ItemSpecification" required minlength="3" maxlength="150" class="form-control" placeholder="Specification" name="ItemSpecification" onkeyup="handleKeyDownItemSpec(event)">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input type="number" id="RequiredQty" required minlength="1" maxlength="9999999" class="form-control  custom-input" placeholder="Qty" name="RequiredQty" onkeyup="handleKeyDownQty(event)">
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <div class="form-group">
                                            <select class="form-control form-select" id="ItemMeasureUnit" name="ItemMeasureUnit" required onselect="onSelectUOM(this)">
                                                <option value='' selected disabled> - UOM -</option>
                                            </select>
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <div class="form-group">
                                            <input type="date" id="RequiredDate" required class="form-control" name="RequiredDate" onkeyup="handleKeyDownReqDate(event)">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input type="text" id="EstRate" class="form-control custom-input" placeholder="Rate" onkeyup="handleKeyDownEstRate(event)" name="EstRate">
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <div class="form-group">
                                            <input type="text" id="DemandPerson" required class="form-control" name="DemandPerson" onkeyup="handleKeyDownReqPerson(event)">
                                        </div>
                                    </td>
                                    <td style="display:none">
                                        <div class="form-group">
                                            <input type="text" id="lastGrnId" disabled class="form-control custom-input" placeholder="GrnID" name="GrnID">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input type="text" id="lastGrnQty" disabled class="form-control" placeholder="Qty" name="lastGrnQty">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input type="text" id="lastGrnRate" disabled class="form-control custom-input" placeholder="Rate" name="lastGrnRate">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <input type="text" id="lastGrnDate" disabled class="form-control text-center" placeholder="Date" name="lastGrnDate">
                                        </div>
                                    </td>
                                    <td>
                                        @*<button type="button" class="btn-success" id="btnrowadd" onclick="onAddRow()">Add</button>
                                        <button type="button" class="btn-danger" onclick="onDeleteRow(this)">Delete</button>*@
                                        <div class="btn-group form-group">
                                            <button type="button" class="btn-outline-success" id="btnrowadd" onclick="onAddRow()" title="Edit"><i class="fa fa-plus"></i></button>
                                            <button type="button" class="btn-outline-danger" onclick="onDeleteRow(this)" title="Delete"><i class="fa fa-trash"></i></button>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="col-sm-12 d-flex justify-content-end">
                            <button type="button" id="btnSave" class="btn btn-primary me-1 mb-1" onclick="onSave(this.form, '0')">Save</button>
                            <button type="button" id="btnSaveAdd" class="btn btn-primary me-1 mb-1" onclick="onSave(this.form, '2')">Save (+)</button>
                            <button type="button" class="btn btn-light-secondary me-1 mb-1" onclick="onLoad()">Cancel</button>
                        </div>
                    </div>
                </div>
                <!-- This table used to add new row Template -->
                <table hidden style="display: none">
                    @*<tr style="display: none" id="tblRowforCopy">*@

                    <tr style="display: none" id="tblRowforCopy">
                        <td class="col-md-1">
                            <div class="form-group">
                                <select class="form-control form-select  select2" id="CostCenterId" name="CostCenterId"  onkeypress="handleCCenterKeyPress(event)">
                                    <option value='' selected disabled> --Select CostCenter--</option>
                                </select>
                            </div>
                        </td>
                        <td style="display:none">
                            <div class="form-group">
                                <input type="text" id="CustomSearchID" readonly class="form-control" placeholder="Id" name="ItemID">
                            </div>
                        </td>
                        <td class="col-md-1">
                            <div class="form-group">
                                <input type="text" autocomplete="off" id="searchTextbox" name="searchTextbox" onkeyup="handleKeyDown(event)" style="width: 100%" class="form-control" placeholder="Search Item">
                                <ul id="searchResults" name="searchResults" style="display: none; position: absolute; list-style: none; margin: 0; padding: 0;"></ul>
                            </div>
                        </td>
                        <td id="stockqty">
                            <div class="form-group">
                                <input type="text" id="StockQty" disabled minlength="3" maxlength="150" class="form-control  custom-input" placeholder="SQty" name="StockQty">
                            </div>
                        </td>
                        <td class="col-md-1">
                            <div class="form-group">
                                <input type="text" id="ItemSpecification"  minlength="3" maxlength="150" class="form-control" placeholder="Specification" name="ItemSpecification" onkeyup="handleKeyDownItemSpec(event)">
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input type="number" id="Qty"  minlength="1" maxlength="9999999" class="form-control custom-input" placeholder="Qty" name="Qty" onkeyup="handleKeyDownQty(event)">
                            </div>
                        </td>
                        <td class="col-md-1">
                            <div class="form-group">
                                <select class="form-control form-select" id="ItemMeasureUnit" name="ItemMeasureUnit"  onselect="onSelectUOM(this)">
                                    <option value='' selected disabled> - UOM -</option>
                                </select>
                            </div>
                        </td>
                        <td class="col-md-1">
                            <div class="form-group">
                                <input type="date" id="RequiredDate"  class="form-control" name="RequiredDate" onkeyup="handleKeyDownReqDate(event)">
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input type="text" id="EstRate" class="form-control custom-input" placeholder="Rate" onkeyup="handleKeyDownEstRate(event)" name="EstRate">
                            </div>
                        </td>
                        <td class="col-md-1">
                            <div class="form-group">
                                <input type="text" id="DemandPerson"  class="form-control" name="DemandPerson" onkeyup="handleKeyDownReqPerson(event)">
                            </div>
                        </td>
                        <td style="display:none">
                            <div class="form-group">
                                <input type="text" id="lastGrnId" disabled class="form-control custom-input" placeholder="GrnID" name="GrnID">
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input type="text" id="lastGrnQty" disabled class="form-control custom-input" placeholder="Qty" name="Qty">
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input type="text" id="lastGrnRate" disabled class="form-control custom-input" placeholder="Rate" name="Qty">
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input type="text" id="lastGrnDate" disabled class="form-control text-center" placeholder="Date" name="Qty">
                            </div>
                        </td>
                        <td>
                            <div class="btn-group form-group">
                                <button type="button" class="btn-outline-success" id="btnrowadd" onclick="onAddRow()" title="Edit"><i class="fa fa-plus"></i></button>
                                <button type="button" class="btn-outline-danger" onclick="onDeleteRow(this)" title="Delete"><i class="fa fa-trash"></i></button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>


<script>
    function handleKeyDown(event) {
        var key = event.key;
        var textbox = event.target;
        calculateAmt(event);

        var TableRow = event.target.closest('tr');
        var results = TableRow.querySelector('[name=searchResults]')
        var ItemID = TableRow.querySelector('[name=ItemID]')
        var ItemSpecification = TableRow.querySelector('[name=ItemSpecification]')

        //var results = document.getElementById("searchResults");

        if (key === "ArrowDown") {
            event.preventDefault();
            if (results.childNodes.length > 0) {
                results.childNodes[0].focus();
            }
        } else {
            if (event.keyCode === 8) {
                console.log("backspace");
                ItemID.value = "";
                cleartextboxes();
            }
            results.style.display = "block";
            var itemclass = 2;

        $.ajax({
            type: "Get",
            url: '@Url.Action("search", "Salequotation")',
            data: {
                itemclass: itemclass,
                query: textbox.value
            },
            dataType: "json",
            beforeSend: function () {
                //$("#CustomSearchLoader").show();
            },
            complete: function () {
                //$("#CustomSearchLoader").hide();
            },
            success: function (data) {
                //console.log(data);
                results.innerHTML = "";
                for (var i = 0; i < data.length && i < 5; i++) {
                    var item = data[i].Dscr;
                    var li = document.createElement("li");
                    li.setAttribute("data-id", data[i].ItemID);
                    li.innerHTML = item;
                    li.tabIndex = 0;
                    li.style.backgroundColor = "white";
                    li.style.padding = "5px";
                    li.style.whiteSpace = "wrap"
                    li.onmouseover = function () {
                        this.style.backgroundColor = "lightgray";
                    };
                    li.onmouseout = function () {
                        this.style.backgroundColor = "white";
                    };
                    li.onclick = function () {
                        textbox.value = this.innerHTML;
                        ItemID.value = this.getAttribute("data-id");
                        selectitemval(ItemID.value, textbox.value);
                        results.style.display = "none";
                        ItemSpecification.focus();
                    };
                    li.onkeydown = function (event) {
                        if (event.key === "ArrowDown") {
                            event.preventDefault();
                            var next = this.nextSibling;
                            if (next) {
                                next.focus();
                            }
                        } else if (event.key === "ArrowUp") {
                            event.preventDefault();
                            var previous = this.previousSibling;
                            if (previous) {
                                previous.focus();
                            }
                        } else if (event.key === "Enter") {
                            textbox.value = this.innerHTML;
                            ItemID.value = this.getAttribute("data-id");
                            selectitemval(ItemID.value, textbox.value);
                            results.style.display = "none";
                            ItemSpecification.focus();
                        }
                    };
                    results.appendChild(li);
                }
            }
        })
        }
    }
</script>


<script>
    function cleartextboxes() {
        AvgRateGet.val = "";
        Qtysearchtxtboxget.val = "";
        StockQtyGet.val = "";
        GrnIDGet.val = "";
        GrnQtyGet.val = "";
        GrnRateGet.val = "";
        GrnDateGet.val = "";
        EstRate = "";

    }

    $(document).on('keydown', function (event) {
        if (event.which === 40) {
            event.preventDefault();
            $('.list-group-item.active').removeClass('active').next().addClass('active').focus();
        }
        if (event.which === 38) {
            event.preventDefault();
            $('.list-group-item.active').removeClass('active').prev().addClass('active').focus();
        }
        //if (event.which === 9) {
        //    event.preventDefault();
        //    if (chnodeflg == true) {
        //        $(chnode).focus();
        //    }
        //}
        if (event.which === 27) {
            event.preventDefault();
            $(chnode).hide();
        }

    });

    //$(document).on('keydown', function (e) {
    //    if (e.keyCode === 9) { // Tab key
    //        e.preventDefault();
    //        console.log("tab2");
    //        var currentFocus = $(':focus');
    //        var nextFocus = currentFocus.next();
    //        if (nextFocus.length) {
    //            nextFocus.focus();
    //        } else {
    //            currentFocus.parent().children().first().focus();
    //        }
    //    }
    //});

</script>


<script>
    var todaydate
    var invoicetype;
    $(document).ready(function () {
        //setComboSelection();
        var CostCenterId = document.getElementById("CostCenterId");
        var ItemMeasureUnit = document.getElementById("ItemMeasureUnit");
        $("#StoreUnitId").select2();
        $(CostCenterId).select2();
        invoicetype = @Model.invoiceType;
        console.log(ItemMeasureUnit);
        StoreUnitDropdown();
        CostCenterDropdown(CostCenterId);
        UOMDropdown(ItemMeasureUnit);
        var now = new Date();
        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);
        todaydate = now.getFullYear() + "-" + (month) + "-" + (day);
        var dayValid = ("0" + (now.getDate() + 3)).slice(-2);
        var validdaate = now.getFullYear() + "-" + (month) + "-" + (dayValid);
        $('#RequisitionDate').val(todaydate);
        $('#RequiredDate').val(todaydate);
        $('#RefDocDate').val(todaydate);
        $("#Remarks").focus();
    });
    //var nudMax = document.getElementById("max").value;


    function handleKeyDownRemarks(e) {
        if (e.keyCode === 13) {
            e.preventDefault();
         var CostCenterId = document.getElementById("CostCenterId");
         $(CostCenterId).focus();
        }
    }

    function handleKeyDownItemSpec(e) {
        if (e.keyCode === 13) {
            e.preventDefault();
            if (e.target.value === "") return;
            var currentRow = e.target.closest("td");
            var nextRow = currentRow.nextElementSibling;
            var nextInput = nextRow.querySelector("#RequiredQty");
            if (nextInput) {
                nextInput.focus();
            }
        }
    }


    function handleKeyDownQty(e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            if (e.target.value === "") return;
            var currentRow = e.target.closest("td");
            var nextRow = currentRow.nextElementSibling;
            var nextInput = nextRow.querySelector("#ItemMeasureUnit");
            if (nextInput) {
                nextInput.focus();
            }
        }
    }
    function handleKeyDownUOM(ee) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            if (e.target.value === "") return;
            var currentRow = e.target.closest("td");
            var nextRow = currentRow.nextElementSibling;
            var nextInput = nextRow.querySelector("#RequiredDate");
            if (nextInput) {
                nextInput.focus();
            }
        }
    }
    function handleKeyDownEstRate(e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            console.log('valis: ' + e.target.value);
            if (e.target.value === "") return;
            var currentRow = e.target.closest("tr");
            var nextInput = currentRow.querySelector("#DemandPerson");
            if (nextInput) {
                nextInput.focus();
            }
        }

    }
    function handleKeyDownReqDate(e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            //var val = $(eval).val();
            if (e.target.value === "") return;
            var currentRow = e.target.closest("tr");
            var nextInput = currentRow.querySelector("#EstRate");
            if (nextInput) {
                nextInput.focus();
            }
        }

    }
    function handleKeyDownReqPerson(e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            if (e.target.valueval === "") return;
            var currentRow = e.target.closest("tr");
            var nextInput = currentRow.querySelector("#btnrowadd");
            if (nextInput) {
                nextInput.focus();
            }
        }
    }

    function handleKeyDownTax(e) {
        calculateAmt(e);
        if (e.keyCode === 13) {
            e.preventDefault();
            if (e.target.value === "") return;
            var currentCell = e.target.closest("td");
            var nextCell = currentCell.nextElementSibling.nextElementSibling;
            var nextInput = nextCell.querySelector("#ASaleTaxRate");
            if (!nextInput.className.includes("focus")) {
                nextCell = currentCell.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling
                nextInput = nextCell.querySelector("#SExDutyRate");
                if (!nextInput.className.includes("focus")) {
                    nextCell = currentCell.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling
                    nextInput = nextCell.querySelector("#btnrowadd");
                }
            }
            if (nextInput) {
                nextInput.focus();
            }
        }
    }
    function onClickSelect(CostCenterId) {
        $(CostCenterId).select2();
    }

    function onAddRow() {
        //var table = document.getElementById('tblDocumentDetail');
        //var row = document.getElementById('tblRow')
        //console.log(row[row.length - 1]);
        ////var row = table.getElementById('tblRow')
        //var rowOuterHtml = row[row.length - 1].rowOuterHtml;
        //var newRow = table.insertRow();
        //newRow.innerHTML = rowOuterHtml;
        

        var table = document.getElementById('tblDocumentDetail');
        var row = document.getElementById('tblRowforCopy');
        var tbody = document.getElementById('tblRowBody');
        var clone = row.cloneNode(true); // copy children too
        clone.id = "newID"; // change id or other attributes/contents
        clone.style.display = 'table-row'
        tbody.appendChild(clone); // add new row to end of table
        //clone.focus();
        var newRow = $("table#tblDocumentDetail tr:last");
        var firstInput = newRow.find('input[name="searchResults"]');

        //var results = newRow.querySelector('[name=searchResults]')
        var qty_input = newRow.find('[name=Qty]')
        var rate_input = newRow.find('[name=Rate]')
        var SaleTaxRate = newRow.find('[name=SaleTaxRate]')
        var CostCenterId = newRow.find('[name=CostCenterId]')
        var RequiredDate = newRow.find('[name=RequiredDate]')
        var ItemMeasureUnit = newRow.find('[name=ItemMeasureUnit]')

        $(RequiredDate).val(todaydate);

        //setComboSelection();
        CostCenterDropdown(CostCenterId);
        UOMDropdown(ItemMeasureUnit);
        $(CostCenterId).select2();
        qty_input.attr("required", "");
        rate_input.attr("required", "");

        if (invoicetype == 2 || invoicetype == 4)
        {
            var SaleTaxRate = newRow.find('[name=SaleTaxRate]')
            var ASaleTaxRate = newRow.find('[name=ASaleTaxRate]')
            SaleTaxRate.attr("required", "");
            ASaleTaxRate.attr("required", "");
        }

        $(CostCenterId).focus();
    };
    function onDeleteRow(ev) {
        var TableRow = ev.closest('tr');

        if (TableRow.id != "tblRow") {
            TableRow.remove();
        }
    }
    function StoreUnitDropdown() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("StoreUnitDropdown", "Combofill")',
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //$('#AcntCode').html('');
                //var rows1 = "<option value='' selected disabled > --Select Account--</option >";
                //$('#AcntCode').append(rows1);

                $.each(result, function (i, item) {
                    var rows;
                    if (i == 0) {
                        rows = "<option selected value='" + item.StoreUnitId + "'>" + item.Name + "</option>";
                    }
                    else {
                        rows = "<option value='" + item.StoreUnitId + "'>" + item.Name + "</option>";
                    }
                    $('#StoreUnitId').append(rows);
                });
            }
        });
    };
    function CostCenterDropdown(CostCenterId) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("CostCenterDropdown", "Combofill")',
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //$('#AcntCode').html('');
                //var rows1 = "<option value='' selected disabled > --Select Account--</option >";
                //$('#AcntCode').append(rows1);
                console.log("results received");
                //console.log(result);

                $.each(result, function (i, item) {
                    var rows;
                    //console.log(item);
                    if (i == 0) {
                        rows = "<option selected value='" + item.CostCenterId + "'>" + item.Name + "</option>";
                    }
                    else {
                        rows = "<option value='" + item.CostCenterId + "'>" + item.Name + "</option>";
                    }
                    $(CostCenterId).append(rows);
                });
            }
        });
    };
    function UOMDropdown(ItemMeasureUnit) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("UOMDropdown", "Combofill")',
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    var rows;
                    //console.log(item);
                    if (item.Id == 1) {
                        rows = "<option selected value='" + item.Id + "'>" + item.Name + "</option>";
                    }
                    else {
                        rows = "<option value='" + item.Id + "'>" + item.Name + "</option>";
                    }
                    $(ItemMeasureUnit).append(rows);
                });
            }
        });
    };

    var searchflg = false;
    var chnode;
    var chnodeflg=false;
    var searchtextboxget;
    var idsearchtxtboxget;
    var Qtysearchtxtboxget;


    var AvgRateGet;
    var StockQtyGet;
    var GrnIDGet;
    var GrnQtyGet;
    var GrnRateGet;
    var GrnDateGet;
    var EstRate;



    function SearchingLikeSendle(val) {
        console.log("reached in Searching");
        //var val = $("#CustomSearch").val();

        //console.log(searchflg);
        //console.log(val);

        //$("#searchpartial").show();

        if (chnode != null & chnodeflg == false) {
            chnode.show();
        }

        if (val == "" || searchflg==false) {
            $(chnode).html("");
            return false;
        }
        $.ajax({
            type: "GET",
            url: '@Url.Action("ItemDropdown", "Combofill")',
            data: {
                Search: val
            },
            beforeSend: function () {
               // $("#CustomSearchLoader").show();
            },
            complete: function () {
                //$("#CustomSearchLoader").show();
            },
            success: function (data) {
                console.log(data);
                $("#searchpartial").html(data);
            }
        })
    }
    function selectitemval(itemval, name) {
        searchflg = false;
        //var StoreUnitId = $("#StoreUnitId").val();
        var StoreUnitId= $("#StoreUnitId").val();

        //console.log(itemval + ' uint id ' + StoreUnitId);
        var val = name;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ItemCurrentStock", "PurReqOrder")',
                data: {
                    ItemId: itemval,
                    StoreUnitId: StoreUnitId
                },
                beforeSend: function () {
                    // $("#CustomSearchLoader").show();
                },
                complete: function () {
                    //$("#CustomSearchLoader").show();
                },
                success: function (data) {
                    if (!data.ItemStockStatus["StockQty"]) {
                        $(AvgRateGet).val('');
                        $(StockQtyGet).val('');
                        $(GrnIDGet).val('');
                        $(GrnQtyGet).val('');
                        $(GrnRateGet).val('');
                        $(EstRate).val('');
                        $(GrnDateGet).val('');
                        return;
                    }
                    console.log(itemval);
                    console.log(data.lsgGRN["lstGRNID"]);
                    $(AvgRateGet).val(data.ItemStockStatus["AvgRate"]);
                    $(StockQtyGet).val(data.ItemStockStatus["StockQty"]);
                    $(GrnIDGet).val(data.lsgGRN["lstGRNID"]);
                    $(GrnQtyGet).val(data.lsgGRN["lstQty"]);
                    $(GrnRateGet).val(data.lsgGRN["lstRate"]);
                    $(EstRate).val(data.lsgGRN["lstRate"]);
                    $(GrnDateGet).val(data.lsgGRN["lstGrnDateString"]);
                    //console.log(typeof data.lsgGRN["lstGrnDate"]);
                    $(ItemSpecification).focus();
                    //$(Qtysearchtxtboxget).focus();
                    $(chnode).hide();
                }
            });
    }
    function ItemFill(search) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("ItemDropdown", "Combofill")',
            data: {
                dtSearch: search
            },
            dataType: "json",
            beforeSend: function () {
                $("#CustomSearchLoader").show();
            },
            complete: function () {
                $("#CustomSearchLoader").hide();
            },
            success: function (result) {
                //$('#AcntCode').html('');
                //var rows1 = "<option value='' selected disabled > --Select Account--</option >";
                //$('#AcntCode').append(rows1);
                console.log(result);
                $.each(result, function (i, item) {
                    var rows;
                    //console.log(i);
                    if (i == 0) {
                        rows = "<option selected value='" + item.ItemID + "'>" + item.Dscr + "</option>";
                    }
                    else {
                        rows = "<option value='" + item.ItemID + "'>" + item.Dscr + "</option>";
                    }
                    $('#ItemID').append(rows);
                    $('#ItemIDD').append(rows);
                });
            }
        });
    };
    function getval(sel) {
        var ReceiverId = $(sel).val();

           console.log(ReceiverId);
        @*$.ajax({
            type: "POST",
            url: "/DeviceManagement/DeviceIsExist?ReceiverId=" + ReceiverId,
            success: function (res) {
                if (res.result == true) {
                    window.location.href ="@Url.Action("EditDeviceM", "DeviceManagement")";
                }
            },
            error: function (exception) {
                alert('Exeption:');
            }
        });*@
    };
    $(document).mouseup(function (e) {
        var container = $(chnode);

        // if the target of the click isn't the container nor a descendant of the container
        if (!container.is(e.target) && container.has(e.target).length === 0) {
            container.hide();
        }
    });
</script>

<script>
    function setComboSelection() {
        //$('.select2').select2();
    }
</script>
